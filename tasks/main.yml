---
# tasks file for rhn_registration

- name: rhn_registration | main | Check if user is using RHEL
  assert:
    that: "ansible_distribution == 'RedHat'"

- name: rhn_registration | main | Configure Red Hat subscirption manager
  template:
    src: rhsm.conf.j2
    dest: /etc/rhsm/rhsm.conf
    owner: root
    group: root
    mode: 0644

- name: rhn_registration | main | Clean out all valid RHN subscriptions
  command: /usr/bin/subscription-manager clean
  when:
    - rhn_subscription_clean is defined
    - rhn_subscription_clean

- name: rhn_registration | main | Register the machine with RHN
  redhat_subscription:
    username: "{{ rhn_user }}"
    password: "{{ rhn_password }}"
    autosubscribe: true
  register: subscription_result
  until: subscription_result | succeeded
  retries: 10
  delay: 5

- name: registration | Find an available Pool ID for defined product
  command: /usr/bin/subscription-manager list --all --available --matches="*{{ rhn_product }}*" --pool-only | head -1
  register: pool_id
  changed_when: false
  failed_when: false

- name: registration | Check if rhn_pool_id is statically defined
  set_fact:
    rhn_static_pool_id: true
  when:
    - rhn_pool_id is defined
    - rhn_pool_id != ""

- name: registration | Set the Pool ID if not statically defined
  set_fact:
    rhn_pool_id: "{{ pool_id.stdout }}"
  when:
    - rhn_static_pool_id is undefined

- name: registration | Determining if a pool is already consumed for defined product
  command: /usr/bin/subscription-manager list --consumed --matches="*{{ rhn_product }}*" --pool-only
  register: pool_id_attached
  changed_when: false
  failed_when: false

- name: registration | List of Consumed Pool IDs
  debug:
    msg: "The following pools are already being consumed: {{ pool_id_attached.stdout_lines }}"
  when: pool_id_attached.stdout != ''

- name: registration | If no pools are consumed or available, fail the playbook
  fail:
    msg: "Either Pool ID was not defined or a new one could not be located"
  when:
    - static_pool_id is undefined
    - pool_id.stdout == ''
    - pool_id_attached.stdout_lines == ''

- name: registration | Attach machine with RHN Pool ID
  command: /usr/bin/subscription-manager attach --pool={{ rhn_pool_id }}
  ignore_errors: no
  register: attach_result
  until: attach_result | succeeded
  retries: 10
  delay: 1
  failed_when: false
  when:
    - (pool_id.stdout != '' and pool_id_attached.stdout == '') or (rhn_static_pool_id is defined and rhn_pool_id not in pool_id_attached.stdout_lines)
